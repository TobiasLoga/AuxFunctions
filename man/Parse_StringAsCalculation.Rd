% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AuxFunctions.R
\name{Parse_StringAsCalculation}
\alias{Parse_StringAsCalculation}
\title{Execute a character string as command}
\usage{
Parse_StringAsCalculation(myString, DF = NA, myDecimalPlaces = NA)
}
\arguments{
\item{myString}{the input string}

\item{DF}{a character used as separator}

\item{myDecimalPlaces}{a number indicating the number of decimal places of the result value}
}
\value{
A numerical value or a vector of numerical values
}
\description{
Parse_StringAsCalculation excecutes a character string as an R command
and returns a number or a vector of numbers
}
\examples{

## Example 1
demostring_1 <- "10 / 12 + 1 * 13"
Parse_StringAsCalculation (
  myString = demostring_1,
  myDecimalPlaces = 3)
## Result: 13.833

## Example 2
demo_partab_Uvalues <-
  as.data.frame ( rbind (
    c ("Roof",   1.201, 0.157),
    c ("Wall",   1.002, 0.182),
    c ("Window", 2.887, 1.151),
    c ("Floor",  0.799, 0.123)
  ))

colnames (demo_partab_Uvalues) <-
  c ("Element", "Old", "New")

rownames (demo_partab_Uvalues) <-
  demo_partab_Uvalues [ , 1]

demo_partab_Uvalues
## View:
# Element   Old   New
# Roof      Roof 1.201 0.157
# Wall      Wall 1.002 0.182
# Window  Window 2.887 1.151
# Floor    Floor 0.799 0.123

## Direct execution:
demo_partab_Uvalues ["Wall", "New"]
## View: "0.182"

## First version of function application:
demostring_2 <- 'demo_partab_Uvalues ["Wall", "New"]'
Parse_StringAsCalculation (
  myString = demostring_2,
  myDecimalPlaces = 2)
## Result:  "0.18"

## Second version of function application
## Useful for parameter tables containing the executable strings (helps keeping the strings short)
demostring_3 <- 'DF ["Wall", "New"]'
Parse_StringAsCalculation (
  myString = demostring_3,
  demo_partab_Uvalues)
## Result:  "0.182"

}
