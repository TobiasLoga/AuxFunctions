% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/AuxFunctions.R
\name{Parse_StringAsCommand}
\alias{Parse_StringAsCommand}
\title{Execute a character string as command}
\usage{
Parse_StringAsCommand(myString, DF = NA)
}
\arguments{
\item{myString}{the input string}

\item{DF}{a character used as separator}
}
\value{
A value or vector or an assignment to a variable
}
\description{
Parse_StringAsCommand excecutes a character string as an R command
}
\examples{

## Example 1
demostring_1 <- "10 * 12 + 2 * 12"
Parse_StringAsCommand (demostring_1)
## Result: 144

## Example 2
demo_partab_Uvalues <-
  as.data.frame ( rbind (
    c ("Roof", 1.2, 0.15),
    c ("Wall", 1.0, 0.18),
    c ("Window", 2.8, 1.0),
    c ("Floor", 0.8, 0.2)
  ))

colnames (demo_partab_Uvalues) <-
  c ("Element", "Old", "New")

rownames (demo_partab_Uvalues) <-
  demo_partab_Uvalues [ , 1]

demo_partab_Uvalues
## View:
#        Element Old  New
# Roof      Roof 1.2 0.15
# Wall      Wall   1 0.18
# Window  Window 2.8    1
# Floor    Floor 0.8  0.2

## Direct execution:
demo_partab_Uvalues ["Wall", "New"]
## View: "0.18"

## First version of function application:
demostring_2 <- 'demo_partab_Uvalues ["Wall", "New"]'
Parse_StringAsCommand (demostring_2)
## Result:  "0.18"

## Second version of function application
## Useful for parameter tables containing the executable strings (helps keeping the strings short)
demostring_3 <- 'DF ["Wall", "New"]'
Parse_StringAsCommand (demostring_3, demo_partab_Uvalues)
## Result:  "0.18"

}
